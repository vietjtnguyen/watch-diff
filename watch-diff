#!/bin/bash
# Copyright (c) 2024 Viet The Nguyen
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
PROGRAM_NAME="$(basename "${0}")"
readonly PROGRAM_NAME
function print_usage() {
  cat <<EOF
usage: ${PROGRAM_NAME} [OPTIONS] -- COMMAND...
EOF
  fmt <<EOF

DESCRIPTION

This program will execute the provided command at a regular interval (time defined by the -i option) and print the output of the command to standard out. It prints out both "snapshots" which are the full output of the command as well as "diffs" which are the diffs between the latest command output and the last one. How often a snapshot is printed is controlled with the -s option.

    -D DIFF_OPTIONS
        Options to send to diff. If the command output changes whitespace often (like ss) then useful diff options to use are "-B -Z -b" which are ignore blank lines, ignore trailing whitespace, and ignore changes in amount of whitespace.

    -I IDENTIFIER
        Identifier output before timestamp to search for to help separate output. (default: WATCHDIFF)

    -S COMMAND_SHELL
        If specified the command is invoked with the provided shell by running \$COMMAND_SHELL -c "\$*". By default the command is invoked directly in this bash script by running "\$@".

    -h
        Print this help/usage text.

    -i INTERVAL_SEC
        Time interval, in seconds, between invocations of command. (default: 1 second)

    -s SNAPSHOT_INTERVAL
        Count interval between output of snapshots (full command output instead of a diff). Every SNAPSHOT_INTERVAL the output of the command is printed instead of the diff. If set to 1 then every command invocation will output a snapshot. If set to 0 then all command invocations after the first will be diffs (essentially disabling snapshots). (default: 100)
EOF
  cat <<EOF

EXAMPLES

    Watch for changes to a folder.
        watch-diff -s 1000 -- ls -l

    Use ps to watch for changes in processes.
        watch-diff -D "-B -Z -b" -S bash -- ps aux '|' sort -g -k2

    Use ss to watch for changes in socket state.
        watch-diff -D "-B -Z -b" -S bash -- ss -H -t -u -a -4 -O -p '|' sort
EOF
}

COMMAND_SHELL=""
DIFF_OPTIONS=""
IDENTIFIER="WATCHDIFF"
INTERVAL_SEC="1"
SNAPSHOT_INTERVAL="100"

while getopts ':D:I:S:hi:s:' OPTION; do
  case "$OPTION" in
    D)
      DIFF_OPTIONS="${OPTARG}"
      ;;
    I)
      IDENTIFIER="${OPTARG}"
      ;;
    S)
      COMMAND_SHELL="${OPTARG}"
      ;;
    h)
      print_usage
      exit 0
      ;;
    i)
      INTERVAL_SEC="${OPTARG}"
      ;;
    s)
      SNAPSHOT_INTERVAL="${OPTARG}"
      ;;
    ?)
      print_usage
      exit 0
      ;;
  esac
done
shift "$((OPTIND -1))"

BUFFER_PREFIX="$(mktemp)"
CURR_BUFFER="0"
SNAPSHOT_COUNT="0"
while true; do
  PREV_BUFFER="$((1 - CURR_BUFFER))"
  CURR_BUFFER_FILE="${BUFFER_PREFIX}-${CURR_BUFFER}"
  PREV_BUFFER_FILE="${BUFFER_PREFIX}-${PREV_BUFFER}"
  DIFF_FILE="${BUFFER_PREFIX}-diff"
  if [ "${SNAPSHOT_INTERVAL}" -gt 0 ]; then
    SNAPSHOT_COUNT="$((SNAPSHOT_COUNT + 1))"
  else
    SNAPSHOT_COUNT="$((SNAPSHOT_INTERVAL - 1))"
  fi

  if [ -z "${COMMAND_SHELL}" ]; then
    "${@}" > "${CURR_BUFFER_FILE}"
  else
    "${COMMAND_SHELL}" -c "$*" > "${CURR_BUFFER_FILE}"
  fi

  if stat "${PREV_BUFFER_FILE}" 1>/dev/null 2>/dev/null && [ "${SNAPSHOT_COUNT}" -lt "${SNAPSHOT_INTERVAL}" ]; then
    # shellcheck disable=SC2086
    if ! diff $DIFF_OPTIONS "${PREV_BUFFER_FILE}" "${CURR_BUFFER_FILE}" 1>"${DIFF_FILE}"; then
      echo -n "${IDENTIFIER} "
      date -u '+%s.%N (%Y-%m-%dT%H:%M:%S.%N)'
      cat "${DIFF_FILE}"
    fi
  else
    echo -n "${IDENTIFIER} "
    date -u '+%s.%N (%Y-%m-%dT%H:%M:%S.%N)'
    cat "${CURR_BUFFER_FILE}"
    SNAPSHOT_COUNT="0"
  fi

  CURR_BUFFER="$((1 - CURR_BUFFER))"

  sleep "${INTERVAL_SEC}"
done

